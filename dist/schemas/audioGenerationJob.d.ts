import { z } from "zod";
export declare const audioGenerationJobStatus: z.ZodEnum<["pending", "processing", "completed", "failed"]>;
export declare const audioGenerationJobSchema: z.ZodObject<{
    userId: z.ZodString;
    prompt: z.ZodString;
    title: z.ZodOptional<z.ZodString>;
    style: z.ZodOptional<z.ZodString>;
    negativeTags: z.ZodOptional<z.ZodString>;
    voice: z.ZodOptional<z.ZodEnum<["m", "f"]>>;
    provider: z.ZodDefault<z.ZodLiteral<"kie">>;
    providerJobId: z.ZodOptional<z.ZodString>;
    status: z.ZodEnum<["pending", "processing", "completed", "failed"]>;
    error: z.ZodOptional<z.ZodString>;
    results: z.ZodOptional<z.ZodArray<z.ZodAny, "many">>;
    createdAt: z.ZodAny;
    updatedAt: z.ZodAny;
    statusUpdatedAt: z.ZodOptional<z.ZodAny>;
    callbackReceivedAt: z.ZodOptional<z.ZodAny>;
}, "strip", z.ZodTypeAny, {
    status: "pending" | "processing" | "completed" | "failed";
    userId: string;
    prompt: string;
    provider: "kie";
    createdAt?: any;
    updatedAt?: any;
    title?: string | undefined;
    style?: string | undefined;
    negativeTags?: string | undefined;
    voice?: "m" | "f" | undefined;
    providerJobId?: string | undefined;
    error?: string | undefined;
    results?: any[] | undefined;
    statusUpdatedAt?: any;
    callbackReceivedAt?: any;
}, {
    status: "pending" | "processing" | "completed" | "failed";
    userId: string;
    prompt: string;
    createdAt?: any;
    updatedAt?: any;
    title?: string | undefined;
    style?: string | undefined;
    negativeTags?: string | undefined;
    voice?: "m" | "f" | undefined;
    provider?: "kie" | undefined;
    providerJobId?: string | undefined;
    error?: string | undefined;
    results?: any[] | undefined;
    statusUpdatedAt?: any;
    callbackReceivedAt?: any;
}>;
export type AudioGenerationJob = z.infer<typeof audioGenerationJobSchema>;
export type AudioGenerationJobStatus = z.infer<typeof audioGenerationJobStatus>;
